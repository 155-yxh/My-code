14 身份证类(对象数组)
问题描述 :
问题描述：判断某人是否为青年的标准是男性不超过35周岁或女性不超过40周岁。已知身份证号从第7位开始的连续8位表示持证人的出生年月日，身份证号的第17位为奇数表示持证人为男性，身份证号第17位数字为偶数表示持证人为女性。例如：身份证号为32110219830103191X的持证人出生年月为1983年1月3日，性别为男性。试定义一个类ID，根据身份证号判断持证人截止到2015年10月1日是否为青年。具体要求如下：
(1) 私有数据成员：
  char *id; 保存18位身份证号
  int year, month, date; y,m,d分别表示持证人的出生年、月、日
   char sex; 持证人的性别（”M”或”F”） M代表男性，F代表女性
(2) 公有成员函数:
   set_ID(char * s); 用参数s初始化成员id（需申请动态内存），并将year,month,date初始化为0
  void fun( );  根据身份证号计算持证人的出生年月和性别，并判断其是否为青年，并将获得的信息存储到对应的数据成员中
  void print( ); 输出持证人的信息
   ~ID(); 析构函数，进行必要的操作
要求使用以下main函数测试：
int main(){ 
   int T, i;
   char id[19];
   cin>>T;
   ID person[T];
   for(i = 0; i < T; i++){
      if(i> 0 && i < T) cout<<endl;
      cin>>id;
      person[i].set_ID(id);
      person[i].fun();
      person[i].print();
   }     
   return 0;
} 
输入说明 :
第一行：身份证数目T
第二行至第T+1行：输入身份证id，行与行之间无多余的空行
输出说明 :
输出T组身份证的信息，组与组之间的信息有一空行
每组的信息如下：
身份证id
year.month.date
M/F  M：男   F：女
Y/N  Y：青年 N：非青年
输入范例 :
6
321102197504011201
321102196103011213
11010119801001315X
110101198510016381
130102198509306242
513436198511019834
输出范例 :
321102197504011201
1975.4.1
F
N

321102196103011213
1961.3.1
M
N

11010119801001315X
1980.10.1
M
Y

110101198510016381
1985.10.1
F
Y

130102198509306242
1985.9.30
F
Y

513436198511019834
1985.11.1
M
Y